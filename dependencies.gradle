ext {

    applicationId = "com.jgbravo.cinemalistings"
    buildToolsVersion = "30.0.3"
    compileSdkVersion = 33
    minSdkVersion = 24
    targetSdkVersion = 33
    versionCode = 1
    versionName = "1.0"
    androidCompileSdkVersion = 33
    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

    version = [
            // Core
            coreKtx         : "1.9.0",
            appCompat       : "1.5.1",
            coroutines      : "1.6.4",

            // Logs
            timber          : "5.0.1",

            // UI
            material        : "1.7.0",
            constraintLayout: "2.1.3",
            recyclerView    : "1.2.1",
            activity        : "1.6.0",
            lifecycle       : "2.5.1",
            glide           : "4.15.1",

            // API
            okHttp          : "4.10.0",
            retrofit        : "2.9.0",

            // JSON
            moshi           : "1.14.0",
            converterMoshi  : "2.9.0",

            // Dependency injection
            dagger          : "2.44",
            hilt            : "1.0.0",

            // Test
            truth           : "1.1.3",
            jUnit           : "4.13.2",
            turbine         : "0.12.0",
            supportTest     : "1.1.3",
            espresso        : "3.4.0",
            mockito         : "4.8.1",
    ]


    library = [
            androidCoreKtxLib    : "androidx.core:core-ktx:$version.coreKtx",
            appCompatLib         : "androidx.appcompat:appcompat:$version.appCompat",
            coroutinesCoreLib    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version.coroutines",
            coroutinesAndroidLib : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version.coroutines",

            timberLib            : "com.jakewharton.timber:timber:$version.timber",

            materialLib          : "com.google.android.material:material:$version.material",
            constraintLayoutLib  : "androidx.constraintlayout:constraintlayout:$version.constraintLayout",
            recyclerViewLib      : "androidx.recyclerview:recyclerview:$version.recyclerView",
            activityKtxLib       : "androidx.activity:activity-ktx:$version.activity",
            viewmodelKtxLib      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$version.lifecycle",
            runtimeKtxLib        : "androidx.lifecycle:lifecycle-runtime-ktx:$version.lifecycle",
            glideLib             : "com.github.bumptech.glide:glide:$version.glide",
            glideCompilerLib     : "com.github.bumptech.glide:compiler:$version.glide",

            daggerHiltLib        : "com.google.dagger:hilt-android:$version.dagger",
            hiltDaggerCompilerLib: "com.google.dagger:hilt-android-compiler:$version.dagger",
            hiltCompilerLib      : "androidx.hilt:hilt-compiler:$version.hilt",

            okHttpLib            : "com.squareup.okhttp3:okhttp:$version.okHttp",
            logginInterceptorLib : "com.squareup.okhttp3:logging-interceptor:$version.okHttp",
            retrofitLib          : "com.squareup.retrofit2:retrofit:$version.retrofit",

            moshiKtLib           : "com.squareup.moshi:moshi-kotlin:$version.moshi",
            moshiCodegenLib      : "com.squareup.moshi:moshi-kotlin-codegen:$version.moshi",
            moshiConverterLib    : "com.squareup.retrofit2:converter-moshi:$version.converterMoshi"
    ]

    testLibrary = [
            truthLib         : "com.google.truth:truth:$version.truth",
            junitLib         : "junit:junit:$version.jUnit",
            turbineLib       : "app.cash.turbine:turbine:$version.turbine",
            coroutinesTestLib: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version.coroutines",
            supportJunitLib  : "androidx.test.ext:junit:$version.supportTest",
            espressoLib      : "androidx.test.espresso:espresso-core:$version.espresso",
            mockitoLib       : "org.mockito:mockito-core:$version.mockito",

            daggerHiltTestLib: "com.google.dagger:hilt-android-testing:$version.dagger"
    ]

    /** CORE DEPENDENCIES **/

    /* CORE COMMONS DEPENDENCIES - MODULE [core-commons] */
    coreCommonsDependencies = [
            timber            : library.timberLib,
            coroutinesCore    : library.coroutinesCoreLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    coreCommonsCompilerDependencies = [
            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib
    ]

    /* CORE PRESENTATION DEPENDENCIES - MODULE [core-presentation] */
    corePresentationDependencies = [
            timber            : library.timberLib,

            androidCoreKtx    : library.androidCoreKtxLib,
            appCompat         : library.appCompatLib,
            activityKtx       : library.activityKtxLib,
            coroutinesCore    : library.coroutinesCoreLib,
            coroutinesAndroid : library.coroutinesAndroidLib,
            runtimeKtx        : library.runtimeKtxLib,
            material          : library.materialLib,
            recyclerView      : library.recyclerViewLib,
            glide             : library.glideLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    corePresentationCompilerDependencies = [
            glideCompiler     : library.glideCompilerLib,

            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib
    ]

    /* CORE DOMAIN DEPENDENCIES - MODULE [core-domain] */
    coreDomainDependencies = [
            coroutinesCore   : library.coroutinesCoreLib,
            coroutinesAndroid: library.coroutinesAndroidLib
    ]

    /* CORE DATA DEPENDENCIES - MODULE [core-data] */
    coreDataDependencies = [
            retrofit: library.retrofitLib
    ]

    /** TEST DEPENDENCIES **/

    testLibraryDependencies = [
            truth         : testLibrary.truthLib,
            junit         : testLibrary.junitLib,
            turbine       : testLibrary.turbineLib,
            coroutinesTest: testLibrary.coroutinesTestLib,

            daggerHiltTest: testLibrary.daggerHiltTestLib
    ]

    androidTestLibraryDependencies = [
            truth         : testLibrary.truthLib,
            supportJunit  : testLibrary.supportJunitLib,
            espresso      : testLibrary.espressoLib,
            coroutinesTest: testLibrary.coroutinesTestLib,

            daggerHiltTest: testLibrary.daggerHiltTestLib
    ]

    /** APP DEPENDENCIES **/

    /* PRESENTATION DEPENDENCIES - MODULE [app] */
    presentationDependencies = [
            timber            : library.timberLib,

            androidCoreKtx    : library.androidCoreKtxLib,
            appCompat         : library.appCompatLib,
            activityKtx       : library.activityKtxLib,
            coroutinesCore    : library.coroutinesCoreLib,
            coroutinesAndroid : library.coroutinesAndroidLib,
            runtimeKtx        : library.runtimeKtxLib,
            material          : library.materialLib,
            recyclerView      : library.recyclerViewLib,
            glide             : library.glideLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    presentationCompilerDependencies = [
            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
    ]
    presentationTestDependencies = [
            truth         : testLibrary.truthLib,
            junit         : testLibrary.junitLib,
            turbine       : testLibrary.turbineLib,
            coroutinesTest: testLibrary.coroutinesTestLib
    ]

    /* DOMAIN DEPENDENCIES - MODULE [domain] */
    domainDependencies = [
            coroutinesCore    : library.coroutinesCoreLib,
            coroutinesAndroid : library.coroutinesAndroidLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    domainCompilerDependencies = [
            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib
    ]

    /* DATA DEPENDENCIES - MODULE [data] */
    dataDependencies = [
            coroutinesCore    : library.coroutinesCoreLib,
            coroutinesAndroid : library.coroutinesAndroidLib,
            retrofit          : library.retrofitLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    dataCompilerDependencies = [
            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib
    ]

    /* DATA REMOTE DEPENDENCIES - MODULE [data-remote] */
    remoteDependencies = [
            coroutinesCore    : library.coroutinesCoreLib,
            coroutinesAndroid : library.coroutinesAndroidLib,

            moshiKt           : library.moshiKtLib,
            moshiConverter    : library.moshiConverterLib,
            okHttp            : library.okHttpLib,
            logginInterceptor : library.logginInterceptorLib,
            retrofit          : library.retrofitLib,

            daggerHilt        : library.daggerHiltLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib,
            hiltCompiler      : library.hiltCompilerLib
    ]
    remoteCompilerDependencies = [
            moshiCodegen      : library.moshiCodegenLib,
            hiltCompiler      : library.hiltCompilerLib,
            hiltDaggerCompiler: library.hiltDaggerCompilerLib
    ]
    remoteTestDependencies = [
            truth         : testLibrary.truthLib,
            junit         : testLibrary.junitLib,
            turbine       : testLibrary.turbineLib,
            coroutinesTest: testLibrary.coroutinesTestLib,
            mockito: testLibrary.mockitoLib
    ]
}